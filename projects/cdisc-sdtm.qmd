---
title: "Prepare Raw Clinical Trial Data into Study Data Tabulation Model (SDTM)-compliant datasets"
description: "From raw clinical trial data sources to SDTM using SAS"
format:
  html:
    toc: true
    toc-depth: 3
    code-fold: true
    #css: styles.css
categories: [CDISC, SAS, SDTM, ADaM, TLF]
permalink: /projects/cdisc-sdtm.html
---

:::{.callout-important}

Note: In the corresponding GitHub repository <https://github.com/Ousmanerabi/clinical-trials-programming-portfolio/tree/main>, I used SAS macros to create, format, and validate the SDTM domains.\
These macros were adapted from reference books I studied while preparing for the SAS Clinical Trials Programming Certification.

:::

### Objective 

This project demonstrates the preparation of raw clinical trial data into CDISC SDTM-ready format. The example focuses on the Demographics (DM) domain, which captures subject-level information required for regulatory submission. The DM domain follows the standard SDTM structure, with one record per subject.

### Methodology

The process was simplified for demonstration purposes but reflects the key steps followed in industry practice:

1.  Identify required variables based on **SDTM Implementation Guide (SDTMIG v3.4)**
    -   Identifier variables : `STUDYID`, `DOMAIN`, `USUBJID`

    -   Topic variables: `USUBJID`

    -   Timing variables : `RFSTDTC`, `RFENDTC`, **`RFXSTDTC`**, `RFXENDTC`

    -   Qualifier variables : `SITEID`, `SEX`, `AGE`, `RACE`, `COUNTRY`
2.  Create an empty dataset structure using SAS macro

#### Code example

```         
**** CREATE EMPTY DM DATASET CALLED EMPTY_DM;
%make_empty_dataset(metadatafile=/home/u64197545/CDISC/Chap2/SDTM_METADATA1.csv,dataset=DM);
**** GET DEMOGRAPHICS DATA;
proc sort
  data=source.demographic
  out=demographic;
    by subject;
run;
**** DERIVE THE MAJORITY OF SDTM DM VARIABLES;
options missing = ' ';
data dm;
  set EMPTY_DM
    demog_dose(rename=(race=_race));
    studyid = 'XYZ123';
    domain = 'DM';
    usubjid = left(uniqueid);
    subjid = put(subject,3.); 
    rfstdtc = put(firstdose,yymmdd10.);  
    rfendtc = put(lastdose,yymmdd10.); 
    rfxstdtc = put(firstdose,yymmdd10.);  
    rfxendtc = put(lastdose,yymmdd10.);
    rficdtc = put(icdate,yymmdd10.);
    rfpendtc = put(lastdoc,yymmdd10.);
    dthfl = 'N';
    siteid = substr(subjid,1,1) || "00";
    brthdtc = put(dob,yymmdd10.);
    age = floor ((intck('month',dob,firstdose) - 
          (day(firstdose) < day(dob))) / 12);
    if age ne . then
      ageu = 'YEARS';
    sex = put(gender,sex_demographic_gender.);
    race = put(_race,race_demographic_race.);
    armcd = put(trt,armcd_demographic_trt.);
    arm = put(trt,arm_demographic_trt.);
    actarmcd = put(trt,armcd_demographic_trt.);
    actarm = put(trt,arm_demographic_trt.);
    country = "USA"; 
run;
  
```

3.  Apply metadata-driven macros to format variables and enforce controlled terminology

    #### Code example

4.  Validate dataset structure to ensure compliance with CDISC standards

### Tools

-   **SAS OnDemand for Academics :** used to build and test the dataset

-   **Macro:** adapted from textbooks used in SAS Clinical Trials Programming certification preparation (*Implementing CDISC Using SAS*, *Validating Clinical Trial Data Reporting with SAS*)

-   **CDISC SDTMIG v3.2:** for required/expected variable definitions

### Outputs

Below is the expected structure of the DM domain:
